#include "Nier Automata items.bt"

LittleEndian();

string readObjID(uint16 id) {
  string out;
  SPrintf(out, "%04x", id);
  return out;
}

string readObjClass(uint16 class) {
  switch (class) {
    case 7:  return "it";
    case 12: return "bg";
    case 15: return "ba";
    default: {
        string out;
        SPrintf(out, "%d", class);
        return out;
    };
  }
}

string readItemID(uint32 id) {
  string out;
  SPrintf(out, "%u: %s", id, getItemName(id));
  return out;
}

FSeek(0);
struct {
    char     id[4];
    float    version;
    uint32   offsetBoxDropData <format=hex>;
    uint32   boxDropDataSize;
    uint32   dropItemSize;
    uint16   numBoxes;
    uint16   numDropItems;
} header;

FSeek(header.offsetBoxDropData);
if ( header.boxDropDataSize == 0x18 ) {    // boxDropDataSize 24
    struct {
        short   objID <read=readObjID>;
        uint16  objClass <read=readObjClass>;
        uint32  itemTableID <format=hex>;
        ubyte   unknownStart;
        ubyte   unknownEnd;
        uint16  unknownIndex;
        uint16  indexFirstDropItem;
        uint16  numDropItems0;
        uint16  numDropItems1;
        ubyte   dropAmount;
        ubyte   dropGoldAmount;
        uint16  unknownInt16;
        uint16  unknownInt16;
    } boxDropData[header.numBoxes] <optimize=false>;
}

struct {
    uint32   itemID <read=readItemID>;
    uint32   dropWeight;
} dropItem[header.numDropItems];